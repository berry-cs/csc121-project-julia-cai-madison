//Update 11/15
//HAS SCOPE OF BOTH SCANNER AND ISCENES MADE
	/*Takes the string from sc.next and compares it to the list of 
	 * scenes we've created. then when it finds the IScene with the same
	 * name as the the string it returns the IScene that passed
	 * 
	 */
	public IScene FindScene( String X ) { 
		IScene FoundYou = null;

		return FoundYou;

	}
	//end FindScene
	public void setup() {


		// INTRO SCENE



		// SCENE A2

		ArrayList<Character> chars = new ArrayList<Character>();

		try {
			Scanner sc = new Scanner(new File("characters.txt"));

			while (sc.hasNext()) {
				String charName = sc.next();
				String img = sc.next();
				int happ = sc.nextInt();

				Character c = new Character(charName, img, happ);
				chars.add(c);
			}


			//chars.get(0)  chars.get(1)

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

		ArrayList<IScene> scenes = new ArrayList<>();
//		ArrayList<Answer> answers = new ArrayList<Answer>();

		try {
			Scanner sc = new Scanner(new File("scenes.txt"));

			while (sc.hasNext()) {
				String type = sc.next();

				//END SCENE CONSTRUCTION
				if (type.equals("END")) {
					String img = sc.next();
					scenes.add(new EndScene(img));
				}

				//FOR ANSWER CONSTRUCTION
				else if (type.equals("ANSWER")) {
					//Answer red = new Answer("images/red-sqr.png",endRed, new Posn(50, 600), 100, 100);
					String img = sc.next();
					int SceneIndex = sc.nextInt();
					int TopLeftType = sc.nextInt();
					int width = sc.nextInt();
					int height = sc.nextInt();
					scenes.add(new Answer(img, scenes.get(SceneIndex),TopLeftType, width, height));
				} 
				//FOR PASSIVE CONSTRUCTION
				//PassiveDialogue intro3 = new PassiveDialogue("images/CS.png", chars.get(0), active1, "I said that Ironically");
				else if (type.equals("PASSIVE")) {
					String pic = sc.next();
					int charIndex = sc.nextInt();
					int nextSceneIndex = sc.nextInt();
					String dialog = sc.nextLine().trim();

					scenes.add(new PassiveDialogue(pic, chars.get(charIndex),
							scenes.get(nextSceneIndex), dialog));
				}
				// FOR ACTICE CONSTRUCTION
				//
				else if (type.equals("ACT")) {
					String img = sc.next();
					int charIndex = sc.nextInt();
					String questionImg = sc.next();
					int answer1 = sc.nextInt();
					int answer2 = sc.nextInt();
					int answer3 = sc.nextInt();
//ActiveDialogue  active1 = new ActiveDialogue("images/CS.png", chars.get(0), "images/COLORWHEEL.jpeg", answer.get(0), answer.get(1), answer.get(2));		
scenes.add(new ActiveDialogue(img,chars.get(charIndex), questionImg, scenes.get(answer1),scenes.get(answer2),scenes.get(answer3)));
				}
			}


			//chars.get(0)  chars.get(1)

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}



		//OLD ANSWER SCANNER FROM WHEN THEY WERE IN DIFFRENT FILES	
		/*try {
			Scanner sc = new Scanner(new File("answer.txt"));

			while (sc.hasNext()) {

				String img = sc.next();
				IScene nextScene = FindScene(sc.next()) ; 
				//HAS SCOPE OF BOTH SCANNER AND ISCENES MADE
				Takes the string from sc.next and compares it to the list of 
		 * scenes we've created. then when it finds the IScene with the same
		 * name as the the string it returns the IScene that passed
		 * 

				int topLeft = sc.nextInt();
				int width = sc.nextInt();
				int height = sc.nextInt(); 
//is the string at "next scene" the same as the name of any IScenes we have
//if so take the object called the same as "next scene" and then make a new answer from it
					Answer d = new Answer(img, nextScene,topLeft,width,height );
					answer.add(d);
			}

		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}*/



		//Converted to text files that we can edit easier  

		//Character Lua500_2 = new Character("Lua", "images/LuaMAD.png", 100);
		//Character Lua500 = new Character("Lua", "images/LuaNice.png", 100);
		//	Character Lua = new Character("Lua", "images/LuaFin.png", 100);
		/*
		 * 1 (50, 600)
		 * 2 (250, 600)
		 * 3 (450, 600)
		
		IScene end1 = new EndScene("images/500B2.png");


		IScene endRed = new EndScene("images/red-sqr.png"); //endRed+
		IScene endBlue = new EndScene("images/blue-sqr.png");
 */
		//		Answer red = new Answer("images/red-sqr.png",endRed, new Posn(50, 600), 100, 100);
		//		Answer blue = new Answer("images/blue-sqr.png",endBlue, new Posn(250, 600), 100, 100);
		//		Answer green = new Answer("images/GREEN.png", intro4, new Posn(450, 600), 100, 100);



//		PassiveDialogue intro5 = new PassiveDialogue("images/CS.png", chars.get(0), end1, "Gimme all your Tix n00b");
//		PassiveDialogue intro4 = new PassiveDialogue("images/CS.png", chars.get(0), intro5, "...");



//		ActiveDialogue  active1 = new ActiveDialogue("images/CS.png", chars.get(0), "images/COLORWHEEL.jpeg", answer.get(0), answer.get(1), answer.get(2));
//		PassiveDialogue intro3 = new PassiveDialogue("images/CS.png", chars.get(0), active1, "I said that Ironically");
//		PassiveDialogue intro2 = new PassiveDialogue("images/CS.png", chars.get(0), intro3, "Don't look at me like that vro");
//		PassiveDialogue intro1 = new PassiveDialogue("images/CS.png", chars.get(0), intro2, "Haiiii :3"); 



		w = new NovelWorld(scenes.get(0));   	//<----- 2. create your initial world object
	}

	public void draw() {
		w = w.update();
		w.draw(this);
	}

